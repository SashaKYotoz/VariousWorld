package net.sashakyotoz.variousworld.init;

import net.minecraft.network.chat.Component;
import net.minecraft.world.food.FoodProperties;
import net.minecraft.world.item.*;
import net.neoforged.neoforge.common.DeferredSpawnEggItem;
import net.neoforged.neoforge.registries.DeferredHolder;
import net.neoforged.neoforge.registries.DeferredItem;
import net.neoforged.neoforge.registries.DeferredRegister;
import net.sashakyotoz.variousworld.VariousWorld;
import net.sashakyotoz.variousworld.entity.boats.ModBoatEntity;
import net.sashakyotoz.variousworld.item.*;

public class VWItems {
	public static final DeferredRegister.Items ITEMS = DeferredRegister.createItems(VariousWorld.MODID);
	public static final DeferredHolder<Item, CrystalSwordItem> CRYSTAL_SWORD = ITEMS.register("crystal_sword", CrystalSwordItem::new);
	public static final DeferredHolder<Item, ThunderboltHammerItem> THUNDERBOLT_HAMMER = ITEMS.register("thunderbolt_hammer", ThunderboltHammerItem::new);
	public static final DeferredHolder<Item,SwordItem> CRYSTALIC_SLIMEBALL_SWORD = ITEMS.register("crystalic_slimeball_sword", () -> new SwordItem(ModTiers.CRYSTALIC_SLIME, 3, -2.4f, new Item.Properties()));
	public static final DeferredHolder<Item, CrystalicSlimeballPickaxeItem> CRYSTALIC_SLIMEBALL_PICKAXE = ITEMS.register("crystalic_slimeball_pickaxe", CrystalicSlimeballPickaxeItem::new);
	public static final DeferredHolder<Item, DarkniumSwordItem> DARKNIUM_SWORD = ITEMS.register("darknium_sword", DarkniumSwordItem::new);
	public static final RegistryObject<Item> DARKNIUM_PICKAXE = ITEMS.register("darknium_pickaxe",()-> new PickaxeItem(ModTiers.DARKNIUM,2, -2.8F, new Item.Properties().fireResistant()));
	public static final RegistryObject<Item> DARKNIUM_AXE = ITEMS.register("darknium_axe", () -> new AxeItem(ModTiers.DARKNIUM,6F, -3.0F, new Item.Properties().fireResistant()));
	public static final RegistryObject<Item> DARKNIUM_SHOVEL = ITEMS.register("darknium_shovel", () -> new ShovelItem(ModTiers.DARKNIUM,2.5F, -3.0F, new Item.Properties().fireResistant()));
	public static final RegistryObject<Item> DARKNIUM_HOE = ITEMS.register("darknium_hoe", () -> new HoeItem(ModTiers.DARKNIUM,-5, 0.0F, new Item.Properties().fireResistant()));
	public static final DeferredHolder<Item, LordSwordItem> LORD_SWORD = ITEMS.register("lord_sword", LordSwordItem::new);
	public static final RegistryObject<Item> LORD_PICKAXE = ITEMS.register("lord_pickaxe", () -> new PickaxeItem(ModTiers.LORD_SCALE,2, -2.8F, new Item.Properties().fireResistant()));
	public static final RegistryObject<Item> LORD_AXE = ITEMS.register("lord_axe", () -> new AxeItem(ModTiers.LORD_SCALE,6F, -3.0F, new Item.Properties().fireResistant()));
	public static final RegistryObject<Item> LORD_SHOVEL = ITEMS.register("lord_shovel", () -> new ShovelItem(ModTiers.LORD_SCALE,2.5F, -3.0F, new Item.Properties().fireResistant()));
	public static final RegistryObject<Item> LORD_HOE = ITEMS.register("lord_hoe", () -> new HoeItem(ModTiers.LORD_SCALE,-5, 0.0F, new Item.Properties().fireResistant()));
	public static final DeferredHolder<Item, SculkScytheItem> SCULK_SCYTHE = ITEMS.register("sculk_scythe", SculkScytheItem::new);
	public static final DeferredHolder<Item, NecromancerWandItem> NECROMANCER_WAND = ITEMS.register("necromancer_wand", NecromancerWandItem::new);
	public static final DeferredHolder<Item, CrystalicBowItem> CRYSTALIC_BOW = ITEMS.register("crystalic_bow", CrystalicBowItem::new);
	public static final DeferredHolder<Item, LordOfFuriesCrossbowItem> LORD_OF_FURIES_CROSSBOW = ITEMS.register("lord_of_furies_crossbow", LordOfFuriesCrossbowItem::new);
	public static final DeferredHolder<Item, WithDescriptionItem> CRYSTALIC_STRENGTH = ITEMS.register("crystalic_strength", () -> new WithDescriptionItem(new Item.Properties().stacksTo(16).rarity(Rarity.RARE), Component.translatable("tooltip.various_world.crystalic_strength.tooltip")));
	public static final DeferredHolder<Item, WithDescriptionItem> CRYSTAL_GEM = ITEMS.register("crystal_gem", () -> new WithDescriptionItem(new Item.Properties().stacksTo(16).fireResistant().rarity(Rarity.EPIC),Component.translatable("tooltip.various_world.crystalic_gem.tooltip")));
	public static final DeferredHolder<Item, MultipleEnderPearlItem> MULTIPLE_ENDER_PEARL_ITEM = ITEMS.register("multiple_ender_pearl_item", MultipleEnderPearlItem::new);
	public static final DeferredHolder<Item, TotemOfDarkSpiritItem> TOTEM_OF_DARK_SPIRIT = ITEMS.register("totem_of_dark_spirit", TotemOfDarkSpiritItem::new);
	public static final DeferredHolder<Item, ExplorerNecklaceItem> EXPLORER_NECKLACE = ITEMS.register("explorer_necklace", ExplorerNecklaceItem::new);
	public static final DeferredHolder<Item, Item> STRENGH_AMULET = ITEMS.register("strengh_amulet", () -> new Item(new Item.Properties().stacksTo(1).fireResistant().rarity(Rarity.UNCOMMON)));
	public static final DeferredHolder<Item, Item> REGENERATION_GEM = ITEMS.register("regeneration_gem", () -> new Item(new Item.Properties().stacksTo(1).fireResistant().rarity(Rarity.UNCOMMON)));
	public static final DeferredHolder<Item, Item> AMETHYST_RING = ITEMS.register("amethyst_ring", () -> new Item(new Item.Properties().stacksTo(1).rarity(Rarity.UNCOMMON)));
	public static final DeferredHolder<Item, CrystalArmorItem.Helmet> CRYSTAL_ARMOR_HELMET = ITEMS.register("crystal_armor_helmet", CrystalArmorItem.Helmet::new);
	public static final DeferredHolder<Item, CrystalArmorItem.Chestplate> CRYSTAL_ARMOR_CHESTPLATE = ITEMS.register("crystal_armor_chestplate", CrystalArmorItem.Chestplate::new);
	public static final DeferredHolder<Item, CrystalArmorItem.Leggings> CRYSTAL_ARMOR_LEGGINGS = ITEMS.register("crystal_armor_leggings", CrystalArmorItem.Leggings::new);
	public static final DeferredHolder<Item, CrystalArmorItem.Boots> CRYSTAL_ARMOR_BOOTS = ITEMS.register("crystal_armor_boots", CrystalArmorItem.Boots::new);
	public static final DeferredHolder<Item, AngelItem.Helmet> ANGEL_HELMET = ITEMS.register("angel_helmet", AngelItem.Helmet::new);
	public static final DeferredHolder<Item, AngelItem.Chestplate> ANGEL_CHESTPLATE = ITEMS.register("angel_chestplate", AngelItem.Chestplate::new);
	public static final DeferredHolder<Item, AngelItem.Leggings> ANGEL_LEGGINGS = ITEMS.register("angel_leggings", AngelItem.Leggings::new);
	public static final DeferredHolder<Item, AngelItem.Boots> ANGEL_BOOTS = ITEMS.register("angel_boots", AngelItem.Boots::new);
	public static final DeferredHolder<Item, SculkArmorItem.Helmet> SCULK_ARMOR_HELMET = ITEMS.register("sculk_armor_helmet", SculkArmorItem.Helmet::new);
	public static final DeferredHolder<Item, SculkArmorItem.Chestplate> SCULK_ARMOR_CHESTPLATE = ITEMS.register("sculk_armor_chestplate", SculkArmorItem.Chestplate::new);
	public static final DeferredHolder<Item, SculkArmorItem.Leggings> SCULK_ARMOR_LEGGINGS = ITEMS.register("sculk_armor_leggings", SculkArmorItem.Leggings::new);
	public static final DeferredHolder<Item, SculkArmorItem.Boots> SCULK_ARMOR_BOOTS = ITEMS.register("sculk_armor_boots", SculkArmorItem.Boots::new);
	public static final DeferredHolder<Item, DarkniumArmorItem.Helmet> DARKNIUM_ARMOR_HELMET = ITEMS.register("darknium_armor_helmet", DarkniumArmorItem.Helmet::new);
	public static final DeferredHolder<Item, DarkniumArmorItem.Chestplate> DARKNIUM_ARMOR_CHESTPLATE = ITEMS.register("darknium_armor_chestplate", DarkniumArmorItem.Chestplate::new);
	public static final DeferredHolder<Item, DarkniumArmorItem.Leggings> DARKNIUM_ARMOR_LEGGINGS = ITEMS.register("darknium_armor_leggings", DarkniumArmorItem.Leggings::new);
	public static final DeferredHolder<Item, DarkniumArmorItem.Boots> DARKNIUM_ARMOR_BOOTS = ITEMS.register("darknium_armor_boots", DarkniumArmorItem.Boots::new);
	public static final DeferredHolder<Item, FuryArmorItem.Helmet> FURY_HELMET = ITEMS.register("fury_helmet", FuryArmorItem.Helmet::new);
	public static final DeferredHolder<Item, FuryArmorItem.Chestplate> FURY_CHESTPLATE = ITEMS.register("fury_chestplate", FuryArmorItem.Chestplate::new);
	public static final DeferredHolder<Item, FuryArmorItem.Leggings> FURY_LEGGINGS = ITEMS.register("fury_leggings", FuryArmorItem.Leggings::new);
	public static final DeferredHolder<Item, FuryArmorItem.Boots> FURY_BOOTS = ITEMS.register("fury_boots", FuryArmorItem.Boots::new);
	public static final DeferredHolder<Item, LordFuryItem.Helmet> LORD_FURY_HELMET = ITEMS.register("lord_fury_helmet", LordFuryItem.Helmet::new);
	public static final DeferredHolder<Item, LordFuryItem.Chestplate> LORD_FURY_CHESTPLATE = ITEMS.register("lord_fury_chestplate", LordFuryItem.Chestplate::new);
	public static final DeferredHolder<Item, LordFuryItem.Leggings> LORD_FURY_LEGGINGS = ITEMS.register("lord_fury_leggings", LordFuryItem.Leggings::new);
	public static final DeferredHolder<Item, LordFuryItem.Boots> LORD_FURY_BOOTS = ITEMS.register("lord_fury_boots", LordFuryItem.Boots::new);
	public static final DeferredHolder<Item, SlimeArmorItem.Helmet> SLIME_ARMOR_HELMET = ITEMS.register("slime_armor_helmet", SlimeArmorItem.Helmet::new);
	public static final DeferredHolder<Item, SlimeArmorItem.Chestplate> SLIME_ARMOR_CHESTPLATE = ITEMS.register("slime_armor_chestplate", SlimeArmorItem.Chestplate::new);
	public static final DeferredHolder<Item, SlimeArmorItem.Leggings> SLIME_ARMOR_LEGGINGS = ITEMS.register("slime_armor_leggings", SlimeArmorItem.Leggings::new);
	public static final DeferredHolder<Item, SlimeArmorItem.Boots> SLIME_ARMOR_BOOTS = ITEMS.register("slime_armor_boots", SlimeArmorItem.Boots::new);
	public static final DeferredItem<Item> CRYSTALSHARD = ITEMS.register("crystalshard", () -> new Item(new Item.Properties().stacksTo(64).rarity(Rarity.EPIC)));
	public static final DeferredItem<Item> DARKSHARD = ITEMS.register("darkshard", () -> new Item(new Item.Properties().stacksTo(16).fireResistant().rarity(Rarity.EPIC)));
	public static final DeferredItem<Item> RAW_SCULK_GEM = ITEMS.register("raw_sculk_gem", () -> new Item(new Item.Properties().stacksTo(64).rarity(Rarity.RARE)));
	public static final DeferredItem<Item> SCULK_GEM = ITEMS.register("sculk_gem", () -> new Item(new Item.Properties().stacksTo(64).rarity(Rarity.UNCOMMON)));
	public static final DeferredItem<Item> SCULK_SHARD = ITEMS.register("sculk_shard", () -> new Item(new Item.Properties().stacksTo(64).rarity(Rarity.UNCOMMON)));
	public static final DeferredItem<Item> DARKNIUM_INGOT = ITEMS.register("darknium_ingot", () -> new Item(new Item.Properties().stacksTo(64).rarity(Rarity.UNCOMMON)));
	public static final DeferredItem<Item> RAW_DARKNIUM_INGOT = ITEMS.register("raw_darknium_ingot", () -> new Item(new Item.Properties().stacksTo(64).fireResistant().rarity(Rarity.UNCOMMON)));
	public static final DeferredItem<Item> FURY_INGOT = ITEMS.register("fury_ingot", () -> new Item(new Item.Properties().stacksTo(64).fireResistant().rarity(Rarity.EPIC)));
	public static final DeferredItem<Item> FURY_SCALES = ITEMS.register("fury_scales", () -> new Item(new Item.Properties().stacksTo(64).rarity(Rarity.UNCOMMON)));
	public static final RegistryObject<Item> DARK_SPIRIT_SPAWN_EGG = ITEMS.register("dark_spirit_spawn_egg", () -> new DeferredSpawnEggItem(VWEntities.DARK_SPIRIT, -16724737, -16777216, new Item.Properties()));
	public static final DeferredHolder<Item, Item> LORD_FURY_SCALE = ITEMS.register("lord_fury_scales_dust", ()-> new Item(new Item.Properties().stacksTo(64).fireResistant().rarity(Rarity.RARE)));
	public static final DeferredHolder<Item, WithDescriptionItem> LORD_FURY_SHARD = ITEMS.register("lord_fury_shard",()-> new WithDescriptionItem(new Item.Properties().stacksTo(3).rarity(Rarity.RARE),Component.translatable("tooltip.various_world.lord_fury_shard.tooltip")));
	public static final DeferredHolder<Item, Item> SLIME_CRYSTALIC = ITEMS.register("slime_crystalic", () -> new Item(new Item.Properties().stacksTo(64).rarity(Rarity.RARE)));
	public static final DeferredHolder<Item, Item> GLOW_PURPLE_DYE = ITEMS.register("glow_purple_dye",()-> new Item(new Item.Properties().stacksTo(64).rarity(Rarity.EPIC)));
	public static final DeferredHolder<Item, Item> CRYSTALIC_STICK = ITEMS.register("crystalic_stick",()-> new Item(new Item.Properties().stacksTo(64).fireResistant().rarity(Rarity.EPIC)));
	public static final RegistryObject<Item> DARK_ZOMBIE_SPAWN_EGG = ITEMS.register("dark_zombie_spawn_egg", () -> new DeferredSpawnEggItem(VWEntities.ZOMBIE_OF_VARIOUS_BIOMES, -12425662, -13057, new Item.Properties()));
	public static final RegistryObject<Item> SCULK_SKELETON_SPAWN_EGG = ITEMS.register("sculk_skeleton_spawn_egg", () -> new DeferredSpawnEggItem(VWEntities.SCULK_SKELETON, -12866376, -16777216, new Item.Properties()));
	public static final RegistryObject<Item> DARK_FURY_SPAWN_EGG = ITEMS.register("dark_fury_spawn_egg", () -> new DeferredSpawnEggItem(VWEntities.DARK_FURY, -13421773, -3355393, new Item.Properties()));
	public static final RegistryObject<Item> CRYSTALIC_SLIME_SPAWN_EGG = ITEMS.register("crystalic_slime_spawn_egg", () -> new DeferredSpawnEggItem(VWEntities.CRYSTALIC_SLIME, -6693377, -3407617, new Item.Properties()));
	public static final RegistryObject<Item> SPIRITOF_PEACEFUL_WASTELAND_SPAWN_EGG = ITEMS.register("spiritof_peaceful_wasteland_spawn_egg",
			() -> new ForgeSpawnEggItem(VWEntities.SPIRITOF_PEACEFUL_WASTELAND, -886377, -1751902, new Item.Properties()));
	public static final RegistryObject<Item> SPIRITOF_DEEP_CAVERN_SPAWN_EGG = ITEMS.register("spiritof_deep_cavern_spawn_egg", () -> new DeferredSpawnEggItem(VWEntities.SPIRITOF_DEEP_CAVERN, -11645362, -12290176, new Item.Properties()));
	public static final RegistryObject<Item> ARMOREDSKELETON_SPAWN_EGG = ITEMS.register("armoredskeleton_spawn_egg", () -> new DeferredSpawnEggItem(VWEntities.ARMORED_SKELETON, -14935012, -16751002, new Item.Properties()));
	public static final RegistryObject<Item> DROMOPHANT_SPAWN_EGG = ITEMS.register("dromophant_spawn_egg", () -> new DeferredSpawnEggItem(VWEntities.DROMOPHANT, 16514043, 26415, new Item.Properties()));
	public static final RegistryObject<Item> WANDERING_SPIRIT_OF_SCULKS_SPAWN_EGG = ITEMS.register("wandering_spirit_summoned_of_sculks_spawn_egg",
			() -> new ForgeSpawnEggItem(VWEntities.WANDERING_SPIRIT_SUMMONED_OF_SCULKS, -16777216, -8388620, new Item.Properties()));
	public static final RegistryObject<Item> ZOMBIE_OF_STONY_MAGMA_SPAWN_EGG = ITEMS.register("zombie_of_stony_magma_spawn_egg", () -> new DeferredSpawnEggItem(VWEntities.ZOMBIE_OF_STONY_MAGMA, -26317, -13421773, new Item.Properties()));
	public static final RegistryObject<Item> ZANY_VILER_WITCH_SPAWN_EGG = ITEMS.register("zany_viler_witch_spawn_egg", () -> new DeferredSpawnEggItem(VWEntities.ZANY_VILER_WITCH, -10092442, -6710785, new Item.Properties()));
	public static final DeferredHolder<Item, MycenaFromCavernOfDeepItem> MYCENA_FROM_CAVERN_OF_DEEP_FOOD = ITEMS.register("mycena_from_cavern_of_deep_food", MycenaFromCavernOfDeepItem::new);
	public static final DeferredHolder<Item, MycenaFromCavernOfDeepItem> MYCENA_FROM_CAVERN_OF_DEEP = ITEMS.register("mycena_from_cavern_of_deep", MycenaFromCavernOfDeepItem::new);
	public static final DeferredHolder<Item, CryshroomItem> CRYSHROOM = ITEMS.register("cryshroom", CryshroomItem::new);
	public static final DeferredHolder<Item, SculkberryItem> SCULKBERRY = ITEMS.register("sculkberry", SculkberryItem::new);
	public static final DeferredItem<Item> SCULK_FRUIT = ITEMS.register("sculk_fruit",()-> new Item(new Item.Properties().stacksTo(64).rarity(Rarity.UNCOMMON).food((new FoodProperties.Builder()).nutrition(5).saturationModifier(1.5f).build())));
	public static final RegistryObject<Item> BRANCH_WITH_DRAGON_EYE_FRUIT = ITEMS.register("branch_with_dragon_eye_fruit", () -> new ItemNameBlockItem(VWBlocks.FLOWER_VINE_FROM_CAVERNOF_DEEP.get(),new Item.Properties().stacksTo(64).food((new FoodProperties.Builder()).nutrition(3).saturationMod(3f).build())));
	public static final DeferredHolder<Item, PotionOfDragonEyeEffectItem> POTION_OF_DRAGON_EYE_EFFECT = ITEMS.register("potion_of_dragon_eye_effect", PotionOfDragonEyeEffectItem::new);
	public static final DeferredHolder<Item, SuperVisionCharmItem> SUPER_VISION_CHARM = ITEMS.register("super_vision_charm", SuperVisionCharmItem::new);
	public static final RegistryObject<Item> CRYSTALIC_OAK_SIGN = ITEMS.register("crystalic_oak_sign",()->new SignItem(new Item.Properties(), VWBlocks.CRYSTALIC_OAK_SIGN.get(), VWBlocks.CRYSTALIC_OAK_WALL_SIGN.get()));
	public static final RegistryObject<Item> SAKURA_SIGN = ITEMS.register("sakura_sign",()->new SignItem(new Item.Properties(), VWBlocks.SAKURA_SIGN.get(), VWBlocks.SAKURA_WALL_SIGN.get()));
	public static final RegistryObject<Item> SCULK_SIGN = ITEMS.register("sculk_sign",()->new SignItem(new Item.Properties(), VWBlocks.SCULK_SIGN.get(), VWBlocks.SCULK_WALL_SIGN.get()));
	public static final RegistryObject<Item> CRYSTALIC_OAK_HANGING_SIGN = ITEMS.register("crystalic_oak_hanging_sign",()->new HangingSignItem(VWBlocks.CRYSTALIC_OAK_HANGING_SIGN.get(), VWBlocks.CRYSTALIC_OAK_HANGING_WALL_SIGN.get(),new Item.Properties()));
	public static final RegistryObject<Item> SAKURA_HANGING_SIGN = ITEMS.register("sakura_hanging_sign",()->new HangingSignItem(VWBlocks.SAKURA_HANGING_SIGN.get(), VWBlocks.SAKURA_HANGING_WALL_SIGN.get(),new Item.Properties()));
	public static final RegistryObject<Item> SCULK_HANGING_SIGN = ITEMS.register("sculk_hanging_sign",()->new HangingSignItem(VWBlocks.SCULK_HANGING_SIGN.get(), VWBlocks.SCULK_HANGING_WALL_SIGN.get(),new Item.Properties()));
	public static final DeferredHolder<Item, ModBoatItem> CRYSTALIC_OAK_BOAT = ITEMS.register("crystalic_oak_boat",()->new ModBoatItem(false, ModBoatEntity.Type.CRYSTALIC_OAK,new Item.Properties().stacksTo(1)));
	public static final DeferredHolder<Item, ModBoatItem> CRYSTALIC_OAK_CHEST_BOAT = ITEMS.register("crystalic_oak_chest_boat",()->new ModBoatItem(true, ModBoatEntity.Type.CRYSTALIC_OAK,new Item.Properties().stacksTo(1)));
	public static final DeferredHolder<Item, ModBoatItem> MAGNOLIA_BOAT = ITEMS.register("magnolia_boat",()->new ModBoatItem(false, ModBoatEntity.Type.MAGNOLIA,new Item.Properties().stacksTo(1)));
	public static final DeferredHolder<Item, ModBoatItem> MAGNOLIA_CHEST_BOAT = ITEMS.register("magnolia_chest_boat",()->new ModBoatItem(true, ModBoatEntity.Type.MAGNOLIA,new Item.Properties().stacksTo(1)));
	public static final DeferredHolder<Item, ModBoatItem> SCULK_BOAT = ITEMS.register("sculk_boat",()->new ModBoatItem(false, ModBoatEntity.Type.SCULK,new Item.Properties().stacksTo(1)));
	public static final DeferredHolder<Item, ModBoatItem> SCULK_CHEST_BOAT = ITEMS.register("sculk_chest_boat",()->new ModBoatItem(true, ModBoatEntity.Type.SCULK,new Item.Properties().stacksTo(1)));
}